---
- name: node dependencies
  hosts: localhost
  environment:
    CI: "true" # Make pnpm not touch lockfile when running from ansible
  tasks:
    - name: Install
      community.general.pnpm:
        path: "{{ ansible_env.HOME }}/origoshift"
- name: Setup database
  hosts: localhost
  vars:
    pnpm_home: "{{ ansible_env.PNPM_HOME | default(fallback_pnpm_home) }}"
    fallback_pnpm_home: "{{ansible_env.HOME}}/.local/share/pnpm"
    # fallback_pnpm_home: "FALLLABACK"
  environment:
    CI: "true" # Make pnpm not touch lockfile when running from ansible
    PNPM_HOME: "{{ pnpm_home }}"
    PATH: "{{pnpm_home}}:{{ansible_env.PATH}}"
  tasks:
    # - name: Generate prisma client
    #   ansible.builtin.command:
    #     argv:
    #       - pnpm
    #       - --filter
    #       - database
    #       - generate
    #   changed_when: true
    - name: Create/Start postgres DB
      ansible.builtin.command:
        chdir: "{{ playbook_dir }}/.."
        cmd: docker compose --ansi never --progress plain up -d
      register: temp_compose_up
      changed_when: "'Started' in temp_compose_up.stdout or 'Started' in temp_compose_up.stderr"
    - name: Wait for postgres to be ready
      ansible.builtin.wait_for:
        port: 5432
        sleep: 2
        active_connection_states: "ESTABLISHED"
    - name: Migrate database
      ansible.builtin.command: pnpm --filter database migrate:deploy
      register: migration_output
      changed_when: "not 'No pending migrations' in migration_output.stdout"
    - name: Seed database
      ansible.builtin.command: pnpm --filter database seed
- name: Build monorepo
  hosts: localhost
  vars:
    pnpm_home: "{{ ansible_env.PNPM_HOME | default(fallback_pnpm_home) }}"
    fallback_pnpm_home: "{{ansible_env.HOME}}/.local/share/pnpm"
    # fallback_pnpm_home: "FALLLABACK"
  environment:
    CI: "true" # Make pnpm not touch lockfile when running from ansible
    PNPM_HOME: "{{ pnpm_home }}"
    PATH: "{{pnpm_home}}:{{ansible_env.PATH}}"
  tasks:
    - name: Build database js bundle
      ansible.builtin.command: pnpm --filter database build
      changed_when: true
    - name: Build shared packages
      ansible.builtin.command:
        chdir: "{{ playbook_dir }}/.."
        argv:
          - pnpm
          - --filter
          - "./packages/**"
          - -r
          - build
      changed_when: true
    - name: Build all the node projects
      ansible.builtin.command:
        chdir: "{{ playbook_dir }}/.."
        argv:
          - pnpm
          - --filter
          - "!./packages/**"
          - -r
          - build
      changed_when: true
